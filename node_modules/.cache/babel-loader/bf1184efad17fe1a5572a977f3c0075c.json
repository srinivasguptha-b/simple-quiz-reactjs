{"ast":null,"code":"var _jsxFileName = \"/var/www/html/quiz-react/quiz-app/dwquiz/src/LoginPage.js\";\nimport React, { useState, useEffect, useContext } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport AppContext from './libs/contextLib';\n\nconst LoginPage = () => {\n  const {\n    setIsAuthenticated\n  } = useContext(AppContext);\n\n  const handleLogin = async googleData => {\n    const res = await fetch(\"/test/g-auth.php\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        token: googleData.tokenId\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const Logindata = await res.json();\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        func: 'register_login_user',\n        data: Logindata\n      })\n    };\n    fetch(\"/test/quiz_apis/post_requests.php\", requestOptions).then(response => response.json()).then(data => {\n      localStorage.setItem('userdata', JSON.stringify(data.data));\n      setIsAuthenticated(true);\n    }); // store returned user somehow\n  };\n\n  return /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"293677709302-icb6g950tk8q3vvia8i692f4ogu7l88p.apps.googleusercontent.com\",\n    buttonText: \"Log in with Google\",\n    onSuccess: handleLogin,\n    onFailure: handleLogin,\n    cookiePolicy: 'single_host_origin',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default LoginPage;","map":{"version":3,"sources":["/var/www/html/quiz-react/quiz-app/dwquiz/src/LoginPage.js"],"names":["React","useState","useEffect","useContext","GoogleLogin","AppContext","LoginPage","setIsAuthenticated","handleLogin","googleData","res","fetch","method","body","JSON","stringify","token","tokenId","headers","Logindata","json","requestOptions","func","data","then","response","localStorage","setItem"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAyBJ,UAAU,CAACE,UAAD,CAAzC;;AACA,QAAMG,WAAW,GAAG,MAAMC,UAAN,IAAoB;AAEpC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AACxCC,MAAAA,MAAM,EAAE,MADgC;AAExCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,QAAAA,KAAK,EAAEP,UAAU,CAACQ;AADD,OAAf,CAFkC;AAKxCC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AAL+B,KAArB,CAAvB;AASA,UAAMC,SAAS,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAxB;AAEA,UAAMC,cAAc,GAAG;AACnBT,MAAAA,MAAM,EAAE,MADW;AAEnBM,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFU;AAGnBL,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEO,QAAAA,IAAI,EAAE,qBAAR;AAA+BC,QAAAA,IAAI,EAAEJ;AAArC,OAAf;AAHa,KAAvB;AAKAR,IAAAA,KAAK,CAAC,mCAAD,EAAsCU,cAAtC,CAAL,CAA2DG,IAA3D,CAAgEC,QAAQ,IAAIA,QAAQ,CAACL,IAAT,EAA5E,EACKI,IADL,CACUD,IAAI,IAAI;AACVG,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCb,IAAI,CAACC,SAAL,CAAeQ,IAAI,CAACA,IAApB,CAAjC;AACAhB,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,KAJL,EAlBoC,CAuBpC;AACH,GAxBD;;AA0BA,sBACI,oBAAC,WAAD;AACI,IAAA,QAAQ,EAAC,0EADb;AAEI,IAAA,UAAU,EAAC,oBAFf;AAGI,IAAA,SAAS,EAAEC,WAHf;AAII,IAAA,SAAS,EAAEA,WAJf;AAKI,IAAA,YAAY,EAAE,oBALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASH,CArCD;;AAuCA,eAAeF,SAAf","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport AppContext from './libs/contextLib';\n\nconst LoginPage = () => {\n    const { setIsAuthenticated } = useContext(AppContext);\n    const handleLogin = async googleData => {\n\n        const res = await fetch(\"/test/g-auth.php\", {\n            method: \"POST\",\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const Logindata = await res.json();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ func: 'register_login_user', data: Logindata })\n        };\n        fetch(\"/test/quiz_apis/post_requests.php\", requestOptions).then(response => response.json())\n            .then(data => {\n                localStorage.setItem('userdata', JSON.stringify(data.data));\n                setIsAuthenticated(true);\n            });\n        // store returned user somehow\n    }\n\n    return (\n        <GoogleLogin\n            clientId=\"293677709302-icb6g950tk8q3vvia8i692f4ogu7l88p.apps.googleusercontent.com\"\n            buttonText=\"Log in with Google\"\n            onSuccess={handleLogin}\n            onFailure={handleLogin}\n            cookiePolicy={'single_host_origin'}\n        />\n    );\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}