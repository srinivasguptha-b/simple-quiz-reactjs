{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/html/quiz-react/quiz-app/dwquiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/var/www/html/quiz-react/quiz-app/dwquiz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from'react';import{Redirect}from'react-router-dom';import{GoogleLogin}from'react-google-login';import AppContext from'./libs/contextLib';var LoginPage=function LoginPage(){var _useContext=useContext(AppContext),isAuthenticated=_useContext.isAuthenticated,setIsAuthenticated=_useContext.setIsAuthenticated,setUserData=_useContext.setUserData;var handleLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(googleData){var res,Logindata,requestOptions;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(process.env.REACT_APP_API_URL_AUTH,\"/g-auth.php\"),{method:\"POST\",body:JSON.stringify({token:googleData.tokenId}),headers:{\"Content-Type\":\"application/json\"}});case 2:res=_context.sent;_context.next=5;return res.json();case 5:Logindata=_context.sent;requestOptions={method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({func:'register_login_user',data:Logindata})};fetch(\"\".concat(process.env.REACT_APP_API_URL_POST),requestOptions).then(function(response){return response.json();}).then(function(data){localStorage.setItem('userdata',JSON.stringify(data.data));setUserData(data.data);setIsAuthenticated(true);});// store returned user somehow\ncase 8:case\"end\":return _context.stop();}}},_callee);}));return function handleLogin(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,isAuthenticated?/*#__PURE__*/React.createElement(Redirect,{to:\"\"}):/*#__PURE__*/React.createElement(GoogleLogin,{clientId:\"293677709302-icb6g950tk8q3vvia8i692f4ogu7l88p.apps.googleusercontent.com\",buttonText:\"Log in with Google\",onSuccess:handleLogin,onFailure:handleLogin,cookiePolicy:'single_host_origin'}));};export default LoginPage;","map":{"version":3,"sources":["/var/www/html/quiz-react/quiz-app/dwquiz/src/LoginPage.js"],"names":["React","useContext","Redirect","GoogleLogin","AppContext","LoginPage","isAuthenticated","setIsAuthenticated","setUserData","handleLogin","googleData","fetch","process","env","REACT_APP_API_URL_AUTH","method","body","JSON","stringify","token","tokenId","headers","res","json","Logindata","requestOptions","func","data","REACT_APP_API_URL_POST","then","response","localStorage","setItem"],"mappings":"2TAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,OAASC,WAAT,KAA4B,oBAA5B,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACpB,gBAA6DJ,UAAU,CAACG,UAAD,CAAvE,CAAQE,eAAR,aAAQA,eAAR,CAAyBC,kBAAzB,aAAyBA,kBAAzB,CAA6CC,WAA7C,aAA6CA,WAA7C,CACA,GAAMC,CAAAA,WAAW,0FAAG,iBAAMC,UAAN,yKAEEC,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,sBAAhB,gBAAqD,CACxEC,MAAM,CAAE,MADgE,CAExEC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACjBC,KAAK,CAAET,UAAU,CAACU,OADD,CAAf,CAFkE,CAKxEC,OAAO,CAAE,CACL,eAAgB,kBADX,CAL+D,CAArD,CAFP,QAEVC,GAFU,qCAWQA,CAAAA,GAAG,CAACC,IAAJ,EAXR,QAWVC,SAXU,eAaVC,cAbU,CAaO,CACnBV,MAAM,CAAE,MADW,CAEnBM,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAFU,CAGnBL,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEQ,IAAI,CAAE,qBAAR,CAA+BC,IAAI,CAAEH,SAArC,CAAf,CAHa,CAbP,CAkBhBb,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYe,sBAAhB,EAA0CH,cAA1C,CAAL,CAA+DI,IAA/D,CAAoE,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACP,IAAT,EAAJ,EAA5E,EACKM,IADL,CACU,SAAAF,IAAI,CAAI,CACVI,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAiCf,IAAI,CAACC,SAAL,CAAeS,IAAI,CAACA,IAApB,CAAjC,EACAnB,WAAW,CAACmB,IAAI,CAACA,IAAN,CAAX,CACApB,kBAAkB,CAAC,IAAD,CAAlB,CACH,CALL,EAMA;AAxBgB,sDAAH,kBAAXE,CAAAA,WAAW,4CAAjB,CA2BA,mBACI,wCACKH,eAAe,cAAG,oBAAC,QAAD,EAAU,EAAE,CAAC,EAAb,EAAH,cAAwB,oBAAC,WAAD,EACpC,QAAQ,CAAC,0EAD2B,CAEpC,UAAU,CAAC,oBAFyB,CAGpC,SAAS,CAAEG,WAHyB,CAIpC,SAAS,CAAEA,WAJyB,CAKpC,YAAY,CAAE,oBALsB,EAD5C,CADJ,CAYH,CAzCD,CA2CA,cAAeJ,CAAAA,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport AppContext from './libs/contextLib';\n\nconst LoginPage = () => {\n    const { isAuthenticated, setIsAuthenticated, setUserData } = useContext(AppContext);\n    const handleLogin = async googleData => {\n\n        const res = await fetch(`${process.env.REACT_APP_API_URL_AUTH}/g-auth.php`, {\n            method: \"POST\",\n            body: JSON.stringify({\n                token: googleData.tokenId\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        const Logindata = await res.json();\n\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ func: 'register_login_user', data: Logindata })\n        };\n        fetch(`${process.env.REACT_APP_API_URL_POST}`, requestOptions).then(response => response.json())\n            .then(data => {\n                localStorage.setItem('userdata', JSON.stringify(data.data));\n                setUserData(data.data);\n                setIsAuthenticated(true);\n            });\n        // store returned user somehow\n    }\n\n    return (\n        <>\n            {isAuthenticated ? <Redirect to=\"\" /> : <GoogleLogin\n                clientId=\"293677709302-icb6g950tk8q3vvia8i692f4ogu7l88p.apps.googleusercontent.com\"\n                buttonText=\"Log in with Google\"\n                onSuccess={handleLogin}\n                onFailure={handleLogin}\n                cookiePolicy={'single_host_origin'}\n            />}\n        </>\n\n    );\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}